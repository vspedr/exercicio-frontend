{"version":3,"sources":["components/Container/Container.js","components/SocialIcon/SocialIcon.js","components/Profile/Profile.js","components/Button/Button.js","components/Header/Header.js","components/Main/Main.js","components/Column/Column.js","components/Footer/Footer.js","components/Section/Section.js","types/project.js","types/skill.js","components/ProjectItem/ProjectItem.js","components/ProjectItem/FeaturedProjectItem.js","redux/selectors.js","config/index.js","service/projects.js","components/ProjectsList/ProjectsList.js","redux/actions.js","redux/actionTypes.js","components/ContactInfo/ContactInfo.js","components/SkillsInfo/SkillItem.js","components/SkillsInfo/SkillsInfo.js","GlobalStyle.js","redux/reducers/projects.js","redux/reducers/index.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["styled","div","attrs","className","socialNetworkMap","codepen","faCodepen","linkedin","faLinkedin","twitter","faTwitter","github","faGithub","stackoverflow","faStackOverflow","googleplus","faGooglePlusG","yahoo","faYahoo","StyledSocialIcon","a","SocialIcon","socialNetwork","href","target","icon","faShareAlt","color","defaultProps","StyledProfile","Profile","colors","button","secondary","bold","StyledHeader","header","Header","Container","src","process","alt","Button","as","faPaperPlane","Main","Column","StyledFooter","footer","Footer","aria-label","role","Section","section","PropTypes","shape","title","string","isRequired","subtitle","description","url","picture","StyledProjectItem","ProjectItem","project","faExternalLinkAlt","StyledFeaturedProjectItem","FeaturedProjectItem","faThumbsUp","getProjectsList","store","projects","list","getProjectsLoadingState","loading","getProjectsErrorState","error","axios","get","config","ProjectsList","dispatch","useDispatch","useEffect","type","projectsService","data","payload","useSelector","length","mainProject","otherProjects","map","StyledContactInfo","ul","ContactInfo","faMapMarkerAlt","faEnvelope","faLink","StyledProgressBar","progress","ProgressBar","StyledSkillItem","SkillItem","name","level","StyledSkillsInfo","SkillsInfo","GlobalStyle","createGlobalStyle","initialState","combineReducers","state","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c000a38.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport default styled.div.attrs({ className: 'container' })`\n  width: 100%;\n  padding-right: 16px;\n  padding-left: 16px;\n  margin-right: auto;\n  margin-left: auto;\n\n  @media (min-width: 576px) {\n    max-width: 540px;\n  }\n  @media (min-width: 768px) {\n    max-width: 720px;\n  }\n  @media (min-width: 992px) {\n    max-width: 960px;\n  }\n  @media (min-width: 1200px) {\n    max-width: 1140px;\n  }\n  @media (min-width: 1400px) {\n    width: 1360px;\n    max-width: inherit;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCodepen,\n  faGithub,\n  faGooglePlusG,\n  faLinkedin,\n  faStackOverflow,\n  faTwitter,\n  faYahoo\n} from '@fortawesome/free-brands-svg-icons';\nimport { faShareAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst socialNetworkMap = {\n  codepen: faCodepen,\n  linkedin: faLinkedin,\n  twitter: faTwitter,\n  github: faGithub,\n  stackoverflow: faStackOverflow,\n  googleplus: faGooglePlusG,\n  yahoo: faYahoo\n};\n\nconst StyledSocialIcon = styled.a`\n  font-size: 18px;\n  display: inline-block;\n  width: 36px;\n  height: 36px;\n  background-color: #b0b7bf;\n  border-radius: 50%;\n  text-align: center;\n\n  &:hover {\n    opacity: 0.8;\n  }\n\n  & svg {\n    margin-top: 8px;\n  }\n`;\n\nconst SocialIcon = ({ socialNetwork, href }) => (\n  <StyledSocialIcon href={href} target=\"_blank\">\n    <FontAwesomeIcon\n      icon={socialNetworkMap[socialNetwork] || faShareAlt}\n      color=\"#ffffff\"\n    />\n  </StyledSocialIcon>\n);\n\nSocialIcon.propTypes = {\n  socialNetwork: PropTypes.string,\n  href: PropTypes.string\n};\n\nSocialIcon.defaultProps = {\n  socialNetwork: '',\n  href: '#'\n};\n\nexport default SocialIcon;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { SocialIcon } from '../SocialIcon';\n\nconst StyledProfile = styled.div`\n  h1 {\n    font-size: 38px;\n    font-weight: bold;\n    margin: 20px 0px;\n  }\n\n  h2 {\n    color: #778492;\n    font-family: Arial, sans-serif;\n    font-size: 24px;\n    font-weight: normal;\n  }\n\n  ul {\n    list-style-type: none;\n    padding: 0px;\n\n    li {\n      display: inline;\n      :not(:last-child) {\n        margin-right: 8px;\n      }\n    }\n  }\n\n  @media (max-width: 761px) {\n    text-align: center;\n  }\n`;\n\nconst Profile = () => (\n  <StyledProfile>\n    <h1>James Lee</h1>\n    <h2>Web App Developer</h2>\n    <ul>\n      <li>\n        <SocialIcon socialNetwork=\"twitter\" />\n      </li>\n      <li>\n        <SocialIcon socialNetwork=\"googleplus\" />\n      </li>\n      <li>\n        <SocialIcon socialNetwork=\"linkedin\" />\n      </li>\n      <li>\n        <SocialIcon socialNetwork=\"github\" />\n      </li>\n      <li>\n        <SocialIcon socialNetwork=\"yahoo\" />\n      </li>\n    </ul>\n  </StyledProfile>\n);\n\nexport default Profile;\n","import styled from 'styled-components';\n\nconst colors = {\n  primary: '#54ba4e',\n  secondary: '#479FC8'\n};\n\nexport default styled.button.attrs({ className: 'btn' })`\n  border: none;\n  color: #ffffff;\n  padding: 8px 16px;\n  font-size: 16px;\n  background: ${({ secondary }) =>\n    secondary ? colors.secondary : colors.primary};\n  font-weight: ${({ bold }) => (bold ? 'bold' : '600')};\n  text-transform: uppercase;\n  text-decoration: none;\n  border-radius: 4px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons';\n\nimport { Container } from '../Container';\nimport { Profile } from '../Profile';\nimport { Button } from '../Button';\n\nconst StyledHeader = styled.header`\n  padding: 32px 0;\n  background: #f5f5f5;\n  border-top: 10px solid #778492;\n\n  img {\n    width: 180px;\n    height: 180px;\n  }\n\n  .container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  @media (min-width: 768px) {\n    img {\n      margin-right: 32px;\n    }\n\n    .container {\n      flex-direction: row;\n      align-content: flex-start;\n\n      .btn {\n        align-self: center;\n        margin-left: auto;\n      }\n    }\n  }\n`;\n\nconst Header = () => (\n  <StyledHeader>\n    <Container>\n      <img src={`${process.env.PUBLIC_URL}/img/profile.png`} alt=\"James Lee\" />\n      <Profile />\n      <Button as=\"a\" href=\"#\" bold>\n        <FontAwesomeIcon icon={faPaperPlane} /> Contact me\n      </Button>\n    </Container>\n  </StyledHeader>\n);\n\nexport default Header;\n","import styled from 'styled-components';\nimport { Container } from '../Container';\n\nconst Main = styled(Container)`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: auto;\n  padding: 60px 16px;\n\n  @media (min-width: 992px) {\n    grid-template-columns: 2fr 1fr;\n  }\n`;\n\nexport default Main;\n","import styled from 'styled-components';\n\nconst Column = styled.div.attrs({ className: 'column' })`\n  padding: 0px;\n`;\n\nexport default Column;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledFooter = styled.footer`\n  background: #32383e;\n  color: #fff;\n  padding: 10px 0;\n  text-align: center;\n  font-size: 10px;\n`;\n\nconst Footer = () => (\n  <StyledFooter>\n    Made with{' '}\n    <span aria-label=\"love, coffee and heavy metal\" role=\"img\">\n      ❤️☕🎸🤘\n    </span>{' '}\n    by Victor Pedrazzi\n  </StyledFooter>\n);\n\nexport default Footer;\n","import styled from 'styled-components';\n\nconst Section = styled.section.attrs({ className: 'section' })`\n  background: #ffffff;\n  padding: 32px;\n\n  &:not(:last-child) {\n    margin-bottom: 32px;\n  }\n\n  h2 {\n    margin-top: 0;\n    margin-bottom: 32px;\n    color: #545e69;\n    font-size: 24px;\n    font-weight: bold;\n  }\n`;\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nconst TProjectItemProps = {\n  project: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    subtitle: PropTypes.string,\n    description: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    picture: PropTypes.string.isRequired\n  }).isRequired\n};\n\nexport default TProjectItemProps;\n","import PropTypes from 'prop-types';\n\nexport const TSkillItemProps = {\n  name: PropTypes.string.isRequired,\n  level: PropTypes.string.isRequired,\n  progress: PropTypes.string.isRequired\n};\n\nexport const TProgressBarProps = {\n  progress: PropTypes.string.isRequired\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { TProjectItemProps } from '../../types';\n\nconst StyledProjectItem = styled.div`\n  margin: 48px 0px;\n\n  div.grid {\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    img {\n      width: 100%;\n      height: auto;\n      display: inline-block;\n    }\n\n    div.description {\n      padding: 0px 16px;\n\n      h3 {\n        margin: 0px;\n        color: #778492;\n        font-size: 18px;\n      }\n\n      p {\n        font-family: Arial, sans-serif;\n        display: inline-block;\n      }\n    }\n  }\n\n  a {\n    text-decoration: none;\n    margin: 16px 0px;\n    &:not(.btn) {\n      color: #2d844e;\n    }\n  }\n`;\n\nconst ProjectItem = ({ project }) => (\n  <StyledProjectItem>\n    <div className=\"grid\">\n      <img\n        src={`${process.env.PUBLIC_URL}/img/${project.picture}`}\n        alt=\"Project\"\n      />\n      <div className=\"description\">\n        <h3>{project.title}</h3>\n        <p>{project.description}</p>\n        <a href={project.url}>\n          <FontAwesomeIcon icon={faExternalLinkAlt} /> Find out more\n        </a>\n      </div>\n    </div>\n  </StyledProjectItem>\n);\n\nProjectItem.propTypes = TProjectItemProps;\n\nexport default ProjectItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons';\n\nimport { TProjectItemProps } from '../../types';\nimport { Button } from '../Button';\n\nconst StyledFeaturedProjectItem = styled.div`\n  margin-bottom: 32px;\n\n  h3,\n  h4 {\n    color: #778492;\n  }\n\n  h3 {\n    font-size: 20px;\n    font-weight: bold;\n  }\n\n  h4 {\n    font-weight: normal;\n  }\n\n  p {\n    display: inline-block;\n  }\n\n  img {\n    width: 100%;\n    height: auto;\n    display: inline-block;\n  }\n\n  a {\n    text-decoration: none;\n    margin: 16px 0px;\n    &:not(.btn) {\n      color: #2d844e;\n    }\n  }\n\n  div.link-container {\n    margin: 16px 0px;\n  }\n\n  margin-bottom: 64px;\n\n  h3,\n  h4 {\n    text-align: center;\n  }\n\n  div.grid {\n    grid-template-columns: 1fr;\n    img {\n      display: block;\n      width: 100%;\n      height: auto;\n    }\n  }\n\n  div.link-container {\n    text-align: center;\n  }\n`;\n\nconst FeaturedProjectItem = ({ project }) => (\n  <StyledFeaturedProjectItem>\n    <h3>{project.title}</h3>\n    {project.subtitle && <h4>{project.subtitle}</h4>}\n\n    <img\n      src={`${process.env.PUBLIC_URL}/img/${project.picture}`}\n      alt=\"Project\"\n    />\n    <p>{project.description}</p>\n\n    <div className=\"link-container\">\n      <Button secondary as=\"a\" href={project.url}>\n        <FontAwesomeIcon icon={faThumbsUp} /> Back my project\n      </Button>\n    </div>\n  </StyledFeaturedProjectItem>\n);\n\nFeaturedProjectItem.propTypes = TProjectItemProps;\n\nexport default FeaturedProjectItem;\n","export const getProjectsList = store => store.projects.list;\nexport const getProjectsLoadingState = store => store.projects.loading;\nexport const getProjectsErrorState = store => store.projects.error;\n","const { REACT_APP_BACKEND_URL } = process.env;\n\nexport default {\n  BACKEND_URL: REACT_APP_BACKEND_URL\n};\n","import axios from 'axios';\nimport config from '../config';\n\nconst ENDPOINT = '/projects';\nconst get = () => axios.get(`${config.BACKEND_URL}${ENDPOINT}`);\n\nexport default { get };\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ProjectItem, FeaturedProjectItem } from '../ProjectItem';\n\nimport {\n  getProjectsList,\n  getProjectsLoadingState,\n  getProjectsErrorState\n} from '../../redux/selectors';\nimport { fetchProjects } from '../../redux/actions';\nimport { Section } from '../Section';\n\nconst ProjectsList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchProjects());\n  }, [dispatch]);\n\n  const projects = useSelector(getProjectsList);\n  const loading = useSelector(getProjectsLoadingState);\n  const error = useSelector(getProjectsErrorState);\n\n  if (error || loading || projects.length === 0) return null;\n\n  const [mainProject, ...otherProjects] = projects;\n\n  return (\n    <Section>\n      <h2>Latest Projects</h2>\n      <FeaturedProjectItem project={mainProject} />\n      <hr />\n      {otherProjects.map(project => (\n        <ProjectItem project={project} />\n      ))}\n    </Section>\n  );\n};\n\nexport default ProjectsList;\n","import { projectsService } from '../service';\nimport {\n  PROJECTS_FETCH_START,\n  PROJECTS_FETCH_SUCCESS,\n  PROJECTS_FETCH_ERROR\n} from './actionTypes';\n\nexport const fetchProjects = () => {\n  return async dispatch => {\n    dispatch({ type: PROJECTS_FETCH_START });\n    try {\n      const { data } = await projectsService.get();\n      dispatch({ type: PROJECTS_FETCH_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({ type: PROJECTS_FETCH_ERROR, payload: error });\n    }\n  };\n};\n","export const PROJECTS_FETCH_START = 'PROJECTS_FETCH_START';\nexport const PROJECTS_FETCH_SUCCESS = 'PROJECTS_FETCH_SUCCESS';\nexport const PROJECTS_FETCH_ERROR = 'PROJECTS_FETCH_ERROR';\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faMapMarkerAlt,\n  faEnvelope,\n  faLink\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { Section } from '../Section';\n\nconst StyledContactInfo = styled.ul`\n  list-style-type: none;\n  padding: 0px;\n\n  li {\n    &:not(:first-child) {\n      margin-top: 16px;\n    }\n    &:not(:last-child) {\n      margin-bottom: 16px;\n    }\n\n    svg {\n      margin-right: 16px;\n      color: #ccd1d6;\n    }\n\n    address {\n      display: inline;\n      font-style: normal;\n    }\n\n    a {\n      text-decoration: none;\n      color: #2d844e;\n    }\n  }\n`;\n\nconst ContactInfo = () => (\n  <Section as=\"aside\">\n    <StyledContactInfo>\n      <li>\n        <FontAwesomeIcon icon={faMapMarkerAlt} />\n        <address>San Francisco, US</address>\n      </li>\n      <li>\n        <FontAwesomeIcon icon={faEnvelope} />\n        <a href=\"mailto:jameslee@website.com\">jameslee@website.com</a>\n      </li>\n      <li>\n        <FontAwesomeIcon icon={faLink} />\n        <a href=\"http://www.website.com\">http://www.website.com</a>\n      </li>\n    </StyledContactInfo>\n  </Section>\n);\n\nexport default ContactInfo;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { TSkillItemProps, TProgressBarProps } from '../../types';\n\nconst StyledProgressBar = styled.div`\n  position: relative;\n  width: 100%;\n  height: 16px;\n  background: #e8e8e8;\n\n  .progress-bar__current {\n    position: relative;\n    top: 0px;\n    left: 0px;\n    z-index: 1;\n    width: ${({ progress }) => progress};\n    height: 16px;\n    background: #66cb8c;\n  }\n`;\n\nconst ProgressBar = ({ progress }) => {\n  return (\n    <StyledProgressBar progress={progress}>\n      <div className=\"progress-bar__current\" />\n    </StyledProgressBar>\n  );\n};\n\nProgressBar.propTypes = TProgressBarProps;\n\nconst StyledSkillItem = styled.div`\n  h3,\n  h4 {\n    display: inline-block;\n  }\n\n  h3 {\n    font-size: 16px;\n    color: #778492;\n    font-weight: bold;\n  }\n\n  h4 {\n    float: right;\n    font-size: 14px;\n    color: #ccd1d6;\n    font-weight: normal;\n  }\n`;\n\nconst SkillItem = ({ name, level, progress }) => (\n  <StyledSkillItem>\n    <h3>{name}</h3>\n    <h4>{level}</h4>\n    <ProgressBar progress={progress} />\n  </StyledSkillItem>\n);\n\nSkillItem.propTypes = TSkillItemProps;\n\nexport default SkillItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport SkillItem from './SkillItem';\n\nimport { Section } from '../Section';\n\nconst StyledSkillsInfo = styled(Section)`\n  a {\n    display: inline-block;\n    text-decoration: none;\n    margin: 16px 0px;\n    &:not(.btn) {\n      color: #2d844e;\n    }\n  }\n`;\n\nconst SkillsInfo = () => (\n  <StyledSkillsInfo>\n    <h2>Skills</h2>\n    <p>\n      Intro about your skills goes here. Keep the list lean and only show your\n      primary skillset. You can always provide a link to your Linkedin or\n      Coderwall profile so people can get more info there.\n    </p>\n    <SkillItem name=\"Python & Django\" level=\"Expert\" progress=\"95%\" />\n    <SkillItem name=\"Javasctipt & jQuery\" level=\"Expert\" progress=\"95%\" />\n    <SkillItem name=\"HTML5, CSS3, SASS, LESS\" level=\"Expert\" progress=\"95%\" />\n    <SkillItem name=\"Ruby on Rails\" level=\"Pro\" progress=\"80%\" />\n    <a href=\"https://coderwall.com/\">\n      <FontAwesomeIcon icon={faExternalLinkAlt} /> More on Coderwall\n    </a>\n  </StyledSkillsInfo>\n);\n\nexport default SkillsInfo;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n\n  body {\n    margin:0;\n    font-family: 'Montserrat', sans-serif;\n    background: #DAE3E7;\n    color: #434343;\n  }\n\n  p {\n    font-family: Arial, sans-serif;\n    font-size: 16px;\n  }\n`;\n","import {\n  PROJECTS_FETCH_START,\n  PROJECTS_FETCH_SUCCESS,\n  PROJECTS_FETCH_ERROR\n} from '../actionTypes';\n\nconst initialState = {\n  list: [],\n  loading: false,\n  error: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case PROJECTS_FETCH_START:\n      return { ...initialState, loading: true };\n    case PROJECTS_FETCH_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        list: action.payload\n      };\n    case PROJECTS_FETCH_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport projects from './projects';\n\nexport default combineReducers({ projects });\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\n// eslint-disable-next-line\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { Header } from './components/Header';\nimport { Main } from './components/Main';\nimport { Column } from './components/Column';\nimport { Footer } from './components/Footer';\nimport { Section } from './components/Section';\nimport { ProjectsList } from './components/ProjectsList';\nimport { ContactInfo } from './components/ContactInfo';\nimport { SkillsInfo } from './components/SkillsInfo';\nimport { GlobalStyle } from './GlobalStyle';\nimport store from './redux/store';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <GlobalStyle />\n      <Header />\n      <Main as=\"main\">\n        <Column>\n          <Section>\n            <h2>About me</h2>\n            <p>\n              Lorem Ipsum is simply dummy text of the printing and typesetting\n              industry. Lorem Ipsum has been the industry`&apos`s standard dummy\n              text ever since the 1500s, when an unknown printer took a galley\n              of type and scrambled it to make a type specimen book. It has\n              survived not only five centuries, but also the leap into\n              electronic typesetting, remaining essentially unchanged. It was\n              popularised in the 1960s with the release of Letraset sheets\n              containing Lorem Ipsum passages, and more recently with desktop\n              publishing software like Aldus PageMaker including versions of\n              Lorem Ipsum.\n            </p>\n          </Section>\n          <ProjectsList />\n        </Column>\n        <Column>\n          <ContactInfo />\n          <SkillsInfo />\n        </Column>\n      </Main>\n      <Footer />\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}